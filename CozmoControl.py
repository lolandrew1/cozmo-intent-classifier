

from cozmo_fsm import *
from cozmo.util import degrees, Pose
import os
import re
import IntentClassifier

classifier = IntentClassifier()

class ComputePremise(StateNode):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)

    def start(self,event):
        super().start(event)
        world = robot.world.world_map.objects
        print("world: ", world)

        world_map_facts = [""]

        premise = "\n".join(world_map_facts)

        classifier.setPremise(premise)

class Query(StateNode):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        
    def start(self, event=None):
        super().start(event)
        query = event.string
        print("String: ", query)

        response = classifer.classify(query)
        print("Response from fsm: ", response)
		

class CozmoControl(StateMachineProgram):
    def setup(self):
        # 		launcher: StateNode() =N=> ComputePremise() =C=> chat_loop
        # 		chat_loop: ComputePremise() =TM('.*')=> Query() =C=> chat_loop
        # 		
        
        # Code generated by genfsm on Wed Apr 24 16:12:16 2024:
        
        launcher = StateNode() .set_name("launcher") .set_parent(self)
        computepremise1 = ComputePremise() .set_name("computepremise1") .set_parent(self)
        chat_loop = ComputePremise() .set_name("chat_loop") .set_parent(self)
        query1 = Query() .set_name("query1") .set_parent(self)
        
        nulltrans1 = NullTrans() .set_name("nulltrans1")
        nulltrans1 .add_sources(launcher) .add_destinations(computepremise1)
        
        completiontrans1 = CompletionTrans() .set_name("completiontrans1")
        completiontrans1 .add_sources(computepremise1) .add_destinations(chat_loop)
        
        textmsgtrans1 = TextMsgTrans('.*') .set_name("textmsgtrans1")
        textmsgtrans1 .add_sources(chat_loop) .add_destinations(query1)
        
        completiontrans2 = CompletionTrans() .set_name("completiontrans2")
        completiontrans2 .add_sources(query1) .add_destinations(chat_loop)
        
        return self
